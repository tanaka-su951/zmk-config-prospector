name: Build Prospector Firmware (Official Template)

on: [push, pull_request, workflow_dispatch]

# ★★★ 認証権限の追加 ★★★
permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/zmkfirmware/zmk-build-arm:stable 
      options: --user root

    steps:
      # ----------------------------------------------------
      # ★★★ 前回提示した、クリーンで簡潔なZMK公式テンプレートのステップを使用します ★★★
      # ----------------------------------------------------
      
      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config

      - name: Perform ZMK Build
        run: |
          CONFIG_DIR="config"
          
          echo "=== Export ZMK_CONFIG Path ==="
          # ZMK_CONFIG のみ、ビルド前にシェルにエクスポートする
          export ZMK_CONFIG="$PWD/$CONFIG_DIR"
          
          # 環境変数 $ZMK_CONFIG を使用してビルドを実行
          echo "=== Starting ZMK Build ==="
          # west build -s $ZEPHYR_BASE/zmk/app -b ... の形式に変更し、コンテナの内部設定に依存
          west build -s /opt/zmk/app -b seeeduino_xiao_ble -d build/prospector_scanner -- \
            -DSHIELD=prospector_scanner
          
          echo "=== Convert and Finalize ==="

          BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
          UF2_PATH="build/prospector_scanner/zmk.uf2"

          if [ -f "$BIN_PATH" ]; then
            echo "Converting ELF → UF2"
            # ZMK ツールチェーンに存在する Python を使用
            python3 /opt/zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
          else
            echo "FATAL: Build failed, zephyr.elf not found."
            ls -R build/prospector_scanner
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble-zmk
          path: build/prospector_scanner/zmk.uf2
