# ZMK Custom Config Build Workflow (最終確定版)
# ZMKビルドの標準的な構造に完全に準拠

name: Build ZMK Firmware (Final Stable Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BOARD: seeeduino_xiao_ble
      ZEPHYR_SDK_VERSION: 0.15.2
      ZEPHYR_SDK_URL: https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_linux-x86_64.tar.gz
      KCONFIG_NONINTERACTIVE: 1

    steps:
    - name: 1. Checkout ZMK Config (with submodules)
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: 2. Install West Tool
      run: pip install west
      
    - name: 3. Clone ZMK Core, Initialize West, and Move Config Files
      run: |
        echo "--- ZMKコアをクローンし、ワークスペースを構築 ---"
        
        # 🚨 ZMKコアを現在のディレクトリにクローンし、ワークスペースルートにする 🚨
        git clone https://github.com/zmkfirmware/zmk zmk_workspace
        
        # 作業ディレクトリを ZMK ワークスペースに移動
        cd zmk_workspace
        
        # カスタム設定ファイルを新しいワークスペースに移動
        # (ワークフローの実行場所: ${{ github.workspace }} が親ディレクトリになる)
        mv ../config .
        
        # West初期化と依存関係のダウンロード
        west init -l .  # 現在のディレクトリをローカルマニフェストとして使用
        west update
        
        # 依存関係のインストール（ZMKの公式パスを使用）
        pip install -r zephyr/scripts/requirements.txt
        
        # ZMKのビルドは zmk/app ではなく、コアリポジトリのルート (zmk_workspace) から実行するため、
        # 後続のステップのために環境変数を設定
        echo "ZMK_WORKSPACE=${{ github.workspace }}/zmk_workspace" >> $GITHUB_ENV

    - name: 4. Download and Setup Zephyr SDK
      run: |
        ZEPHYR_SDK_DIR="${{ runner.tool_cache }}/zephyr-sdk"
        echo "Installing Zephyr SDK v${{ env.ZEPHYR_SDK_VERSION }} to ${ZEPHYR_SDK_DIR}"
        mkdir -p ${ZEPHYR_SDK_DIR}
        curl -L -f -sS ${{ env.ZEPHYR_SDK_URL }} -o sdk.tar.gz
        tar -xzf sdk.tar.gz -C ${ZEPHYR_SDK_DIR} --strip-components=1

        # ツールチェーンの環境変数をエクスポート
        echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
        echo "ZEPHYR_SDK_INSTALL_DIR=${ZEPHYR_SDK_DIR}" >> $GITHUB_ENV
        
    - name: 5. Run West Build (完全に初期化された環境でビルドを実行)
      # ワークスペース内へ移動し、環境を初期化してからビルド
      run: |
        cd ${{ env.ZMK_WORKSPACE }}
        source zephyr/zephyr-env.sh
        
        echo "--- West Buildの実行 ---"
        # ビルドソースは zmk/app のまま、しかし ZMK_CONFIG は相対パスに変更
        west build -s app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DZMK_CONFIG=config \
          -DEXTRA_CONF_FILE=config/prospector_scanner.conf \
          -DEXTRA_KEMAP_OVERLAY=config/prospector_scanner.keymap \
          -DEXTRA_OVERLAY_FILE=config/prospector_scanner.overlay
          

    - name: 6. Archive Firmware Artifacts
      # ファームウェアのパスもワークスペースに合わせる
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-prospector_scanner
        path: ${{ env.ZMK_WORKSPACE }}/build/zephyr/zmk.uf2
        retention-days: 7
