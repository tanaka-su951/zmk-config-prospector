# ZMKビルドの最終安定版。ホストOSでチェックアウトを完了させてからDockerコンテナを使用します。

name: Build ZMK Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    # ワークフロー全体でデフォルトの作業ディレクトリを設定
    defaults:
      run:
        working-directory: ${{ github.workspace }}
        
    # ホストOSでチェックアウトを処理
    runs-on: ubuntu-latest
    
    # Dockerコンテナを使用
    container: zmkfirmware/zmk-build-arm:stable
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. リポジトリのチェックアウトとサブモジュールの取得 (ホスト側で実行)
      #    このステップはホストで行われるため、defaultsの影響を受けません。
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # ZMKの依存関係をすべて取得

      # 2. westワークスペース初期化とモジュール更新
      #    defaults:run:working-directory の設定により、正しいパスで実行されます。
      - name: Update ZMK modules
        run: west update --rebase
        
      # 3. ZMKファームウェアのビルド
      - name: Build ZMK firmware
        run: west build -p -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }}

      # 4. ビルド成果物（ファームウェアファイル）をアーカイブ
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble
          path: build/zephyr/zephyr.uf2
