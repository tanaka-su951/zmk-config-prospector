name: Build ZMK Firmware

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y git python3-pip ninja-build cmake wget tar unzip jq xz-utils

    - name: Install west
      run: python3 -m pip install --upgrade west

    - name: Cache Zephyr SDK
      id: cache-sdk
      uses: actions/cache@v3
      with:
        path: zephyr-sdk
        key: zephyr-sdk

    - name: Download and extract Zephyr SDK
      if: steps.cache-sdk.outputs.cache-hit != 'true'
      run: |
        echo "キャッシュなし、SDKをダウンロードします"
        ZEHPYR_SDK_TAG=$(curl -s https://api.github.com/repos/zephyrproject-rtos/sdk-ng/releases/latest | jq -r '.tag_name')
        echo "Latest Zephyr SDK tag: $ZEHPYR_SDK_TAG"
        SDK_VER=${ZEHPYR_SDK_TAG#v}
        echo "Using SDK version: $SDK_VER"
        DOWNLOAD_URL="https://github.com/zephyrproject-rtos/sdk-ng/releases/download/${ZEHPYR_SDK_TAG}/zephyr-sdk-${SDK_VER}-linux-x86_64.tar.xz"
        echo "Downloading from $DOWNLOAD_URL"
        wget "$DOWNLOAD_URL"
        tar -xf zephyr-sdk-${SDK_VER}-linux-x86_64.tar.xz
        mv zephyr-sdk-${SDK_VER} zephyr-sdk

    - name: Setup Zephyr environment
      run: |
        export ZEPHYR_SDK_INSTALL_DIR=$PWD/zephyr-sdk
        source $ZEPHYR_SDK_INSTALL_DIR/zephyr-env.sh

    - name: Initialize west
      run: |
        west init -l config
        west update

    - name: Build firmware
      run: |
        export ZEPHYR_SDK_INSTALL_DIR=$PWD/zephyr-sdk
        west build -s app -b seeeduino_xiao_ble -- -DSHIELD=prospector_scanner

    - name: Archive firmware
      uses: actions/upload-artifact@v4
      with:
        name: prospector_scanner-seeeduino_xiao_ble
        path: build/zephyr/zephyr.uf2
