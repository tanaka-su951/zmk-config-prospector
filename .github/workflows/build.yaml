# ZMKビルドの最終安定版。認証エラーを回避するため、手動でサブモジュールをクローンします。

name: Build ZMK Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    # ZMK安定版Dockerイメージを使用
    container: zmkfirmware/zmk-build-arm:stable 
    # ホストOSはそのまま
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. リポジトリのチェックアウト（認証エラーを避けるため、手動でサブモジュールを再帰的にクローン）
      #    $GITHUB_TOKENを使用して認証を確実に行います。
      - name: Checkout repository with recursive submodules
        run: |
          # Gitが利用可能か確認 (Dockerコンテナ内にGitは入っている)
          git --version
          
          # サブモジュールも含めてリポジトリを再帰的にクローン
          # 環境変数 GITHUB_TOKEN を使用して、認証の問題を回避
          git clone --recurse-submodules https://${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY .

      # 2. westワークスペース初期化とモジュール更新
      #    ZMK Dockerイメージを使用しているため、これだけでOK
      - name: Update ZMK modules
        run: west update
        
      # 3. ZMKファームウェアのビルド
      - name: Build ZMK firmware
        run: west build -p -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }}

      # 4. ビルド成果物（ファームウェアファイル）をアーカイブ
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble
          # ZMKのビルド結果は通常 zephyr.uf2 になります。
          path: build/zephyr/zephyr.uf2
