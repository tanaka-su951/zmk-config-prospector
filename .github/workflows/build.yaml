# ZMK Custom Config Build Workflow (手動ツールチェーンセットアップによる強制初期化)

name: Build ZMK Firmware (Manual Toolchain Setup)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config and Submodules
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    # 🚨 修正: 外部アクションを使用せず、GitHub Actions の組み込み機能でツールチェーンをセットアップ
    - name: Setup Toolchain and Python Environment
      run: |
        # Pythonをセットアップ
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv git
        python3 -m pip install -U west

    - name: Setup Zephyr SDK (Manual)
      # 🚨 ZMKビルドに必要な環境変数を設定します
      run: |
        echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
        # ZMKのビルドに必須となるSDKのパスを仮設定（zmk/app実行時に修正されることを期待）
        # 実際には、zmk/app 以下の west.yml で正しい SDK が設定されるはずですが、ここではパスを設定します。
        echo "ZEPHYR_SDK_INSTALL_DIR=/home/runner/zephyr-sdk-0.16.5" >> $GITHUB_ENV

    - name: --- 🚨 ZMK コアの手動クローンと初期化 🚨 ---
      run: |
        # 過去の失敗で残されたwest設定とZMKフォルダを削除
        echo "--- DEBUG: Cleaning up old artifacts ---"
        rm -rf .west zmk
        
        # ZMKコアリポジトリを手動でクローンし、west initが動作するように強制配置
        echo "--- DEBUG: Cloning ZMK Core ---"
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # west initがリポジトリのルートにあるwest.ymlを探すよう指示
        west init -l .
        
        # west updateを実行し、Zephyrやその他のカスタムモジュールを取得
        echo "--- DEBUG: Running west update for remaining dependencies ---"
        west update
        
        if [ ! -d "zmk/app" ]; then
          echo "FATAL: ZMK/APP is still missing after forced clone and west update."
          exit 1
        fi
        
    - name: Install ZMK Python Dependencies
      run: pip install -r zmk/requirements.txt || true

    - name: Build ZMK Firmware
      # west build を実行し、キーボード設定をビルドします。
      run: |
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
