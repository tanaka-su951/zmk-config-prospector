name: Build Prospector Firmware (Local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
    - name: Checkout ZMK Config (as config)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: config

    - name: Install Python Venv
      run: |
        apt update
        apt install -y python3.12-venv || apt install -y python3-venv
      shell: bash

    - name: Initialize and Update west workspace
      run: |
        # 作業ディレクトリ構成:
        # /__w/zmk-config-prospector/zmk-config-prospector/
        # ├── config/
        # └── zmk/ (クローンされるZMK本体)
        echo "Initializing west workspace..."
        rm -rf zmk zephyr modules .west
        west init -l config  # ローカル config をメイン設定として初期化
        cd zmk
        echo "Switching to ZMK directory and updating west modules..."
        west update
        west zephyr-export
        cd ..
      shell: bash

    - name: Debug ZMK Source Location
      run: |
        echo "Listing workspace contents:"
        ls -F
        echo "--- ZMK structure ---"
        ls -F zmk || echo "ZMK directory missing"
        echo "--- Zephyr ---"
        ls -F zephyr || echo "Zephyr directory missing"
      shell: bash

    - name: Set up Python Environment
      run: |
        /usr/bin/python3 -m venv zmk-env
        source zmk-env/bin/activate

        REQUIREMENTS_FILE=$(find zmk -name "requirements.txt" -print -quit)
        if [ -n "$REQUIREMENTS_FILE" ]; then
          echo "Installing dependencies from: $REQUIREMENTS_FILE"
          pip install -r "$REQUIREMENTS_FILE"
        else
          echo "Warning: requirements.txt not found!"
        fi
      shell: bash

    - name: Build Shield:prospector_scanner (seeeduino_xiao_ble)
      run: |
        source zmk-env/bin/activate
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
        export ZEPHYR_BASE="$PWD/zephyr"
        export CMAKE_PREFIX_PATH="$PWD/zephyr/share"

        rm -rf build/prospector_scanner

        CONFIG_DIR="config"
        SHIELD_DIR="$CONFIG_DIR/boards/shields/prospector_scanner"
        mkdir -p $SHIELD_DIR

        echo "# Minimal ZMK config" > "$CONFIG_DIR/prj.conf"
        echo "CONFIG_ZMK_KSCAN_MATRIX=y" >> "$CONFIG_DIR/prj.conf"

        echo "CONFIG_ZMK_KEYBOARD_NAME=\"Prospector Scanner\"" > "$SHIELD_DIR/prospector_scanner.conf"
        echo '# Shield configs here' >> "$SHIELD_DIR/prospector_scanner.conf"

        echo '# Kconfig' > "$SHIELD_DIR/Kconfig"
        echo 'config SHIELD_PROSPECTOR_SCANNER' >> "$SHIELD_DIR/Kconfig"
        echo '  bool "Prospector Scanner"' >> "$SHIELD_DIR/Kconfig"
        echo '  default y' >> "$SHIELD_DIR/Kconfig"

        echo "=== Starting west build ==="
        west build -s zmk/app -d build/prospector_scanner -b seeeduino_xiao_ble -- \
          -DSHIELD=prospector_scanner -DCMAKE_VERBOSE_MAKEFILE=ON

        BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
        UF2_PATH="build/prospector_scanner/zmk.uf2"
        if [ -f "$BIN_PATH" ]; then
          echo "Converting ELF → UF2"
          python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
        else
          echo "FATAL: zephyr.elf not found"
          ls -R build/prospector_scanner
          exit 1
        fi
      shell: bash

    - name: Archive production artifacts (Artifact Upload)
      uses: actions/upload-artifact@v4
      with:
        name: prospector_scanner-seeeduino_xiao_ble-zmk
        path: build/prospector_scanner/zmk.uf2
