name: Build ZMK Firmware (Manual Setup Final Attempt)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # 環境変数を定義
    env:
      BOARD: seeeduino_xiao_ble
      SHIELD: prospector_scanner
      ZMK_CORE_REF: main 

    steps:
    - name: Checkout ZMK Config (Your Repo)
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Set up West and Clone ZMK Core
      run: |
        echo "--- 1. WestをセットアップしZMKコアをクローン ---"
        pip install west
        
        # ZMKコアをメインブランチでクローン
        git clone https://github.com/zmkfirmware/zmk zmk
        cd zmk
        git checkout ${{ env.ZMK_CORE_REF }}
        cd ..

    - name: Initialize West Workspace and Update
      run: |
        echo "--- 2. west initとwest updateを実行 ---"
        # 🚨 修正: ZMKの標準的なマニフェストファイルパスを指定 🚨
        west init -m zmk --mf app/west.yml 
        
        # 依存関係をダウンロード
        west update
        
        echo "--- 3. Python要件をインストール ---"
        pip install -r zmk/requirements.txt
        
    - name: Manually Setup Zephyr SDK (v0.16.1)
      run: |
        echo "--- 4. Zephyr SDKを手動でダウンロードして環境変数を設定 ---"
        WEST_TOOLCHAIN_URL="https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.1/zephyr-sdk-0.16.1_linux-x86_64.tar.gz"
        WEST_TOOLCHAIN_DIR="$HOME/zephyr-sdk"
        
        mkdir -p $WEST_TOOLCHAIN_DIR
        curl -L $WEST_TOOLCHAIN_URL | tar -xz -C $WEST_TOOLCHAIN_DIR --strip-components=1
        
        echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
        echo "ZEPHYR_SDK_INSTALL_DIR=$WEST_TOOLCHAIN_DIR" >> $GITHUB_ENV
        export KCONFIG_NONINTERACTIVE=1
        
    - name: Run West Build
      run: |
        echo "--- 5. west build実行 ---"
        # CMakeが成功するかどうかを確認
        west build -s zmk/app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DSHIELD=${{ env.SHIELD }} \
          -DZMK_CONFIG=${{ github.workspace }}

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-${{ env.SHIELD }}
        path: build/zephyr/zmk.uf2
        retention-days: 7
