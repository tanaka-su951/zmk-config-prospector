name: Build ZMK Firmware (Self-Contained Build - Final Paths)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # üìå Áí∞Â¢ÉÂ§âÊï∞„ÅÆË®≠ÂÆö („Éú„Éº„ÉâÂêç„Å®ZMKË®≠ÂÆö„Éë„Çπ)
    env:
      BOARD: seeeduino_xiao_ble
      KCONFIG_NONINTERACTIVE: 1
      ZMK_CONFIG: ${{ github.workspace }}/config 

    steps:
    - name: 1. Checkout ZMK Config and West Manifest
      uses: actions/checkout@v4
      with:
        # west.yml„Å´‰æùÂ≠ò„Åô„Çã„Åü„ÇÅ„ÄÅ„Åì„Åì„Åß„ÅØ„Çµ„Éñ„É¢„Ç∏„É•„Éº„É´„ÅØ‰∏çË¶Å
        submodules: false
        fetch-depth: 0

    - name: 2. Install West Tool
      run: pip install west

    - name: 3. Initialize West Workspace and Download Dependencies
      # „Ç´„Çπ„Çø„É†„É¢„Ç∏„É•„Éº„É´„ÇíÂê´„ÇÄ„Åô„Åπ„Å¶„ÅÆ‰æùÂ≠òÈñ¢‰øÇ„Çí west.yml „Å´Âü∫„Å•„ÅÑ„Å¶„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ
      run: |
        west init -m https://github.com/zmkfirmware/zmk --mr main --mf app/west.yml
        west update
        
        echo "ZEPHYR_BASE=${{ github.workspace }}/zephyr" >> $GITHUB_ENV

    - name: 4. Install Python Dependencies
      run: |
        pip install -r zephyr/scripts/requirements.txt
        west zephyr-export | grep -E "^export " | sed -E 's/^export\s+//' >> $GITHUB_ENV

    - name: 5. Install Zephyr SDK
      run: |
        SDK_VERSION="0.16.5"
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${SDK_VERSION}/zephyr-sdk-${SDK_VERSION}_linux-x86_64.tar.xz \
          -O /tmp/zephyr-sdk.tar.xz
        
        SDK_ROOT="${{ runner.tool_cache }}/zephyr-sdk-${SDK_VERSION}"
        mkdir -p ${SDK_ROOT}
        
        tar xf /tmp/zephyr-sdk.tar.xz -C ${SDK_ROOT} --strip-components=1
        
        echo "ZEPHYR_SDK_INSTALL_DIR=${SDK_ROOT}" >> $GITHUB_ENV

    - name: 6. Run West Build (prospector_scanner)
      run: |
        echo "--- Building prospector_scanner ---"
        
        BOARD_OVERLAY="${{ github.workspace }}/config/boards/${{ env.BOARD }}.overlay"
        SCANNER_OVERLAY="${{ github.workspace }}/config/prospector_scanner.overlay"
        OVERLAY_FILES="${BOARD_OVERLAY} ${SCANNER_OVERLAY}"
        
        # üö® ‰øÆÊ≠£: DTC_INCLUDE_DIRS„Çí„Ç´„Çπ„Çø„É†„É¢„Ç∏„É•„Éº„É´ÂÜÖ„ÅÆ 'dts' „Éï„Ç©„É´„ÉÄ„Å´Ë®≠ÂÆö
        DTC_INCLUDE_PATH="${{ github.workspace }}/modules/prospector-zmk-module/dts" 
        
        west build -s zmk/app -d build/scanner -b ${{ env.BOARD }} -- \
          -DAPP_LABEL="prospector_scanner" \
          -DDTC_OVERLAY_FILE="${OVERLAY_FILES}" \
          -DDTC_INCLUDE_DIRS="${DTC_INCLUDE_PATH}"

    - name: 7. Run West Build (prospector_adapter)
      run: |
        echo "--- Building prospector_adapter ---"

        BOARD_OVERLAY="${{ github.workspace }}/config/boards/${{ env.BOARD }}.overlay"
        ADAPTER_OVERLAY="${{ github.workspace }}/config/prospector_adapter.overlay"
        OVERLAY_FILES="${BOARD_OVERLAY} ${ADAPTER_OVERLAY}"
        
        # üö® ‰øÆÊ≠£: DTC_INCLUDE_DIRS„Çí„Ç´„Çπ„Çø„É†„É¢„Ç∏„É•„Éº„É´ÂÜÖ„ÅÆ 'dts' „Éï„Ç©„É´„ÉÄ„Å´Ë®≠ÂÆö
        DTC_INCLUDE_PATH="${{ github.workspace }}/modules/prospector-zmk-module/dts" 
        
        west build -s zmk/app -d build/adapter -b ${{ env.BOARD }} -- \
          -DAPP_LABEL="prospector_adapter" \
          -DDTC_OVERLAY_FILE="${OVERLAY_FILES}" \
          -DDTC_INCLUDE_DIRS="${DTC_INCLUDE_PATH}"

    - name: 8. Archive Firmware Artifacts (Scanner)
      uses: actions/upload-artifact@v4
      with:
        name: firmware-prospector-scanner
        path: build/scanner/zephyr/zmk.uf2
        retention-days: 7
        
    - name: 9. Archive Firmware Artifacts (Adapter)
      uses: actions/upload-artifact@v4
      with:
        name: firmware-prospector-adapter
        path: build/adapter/zephyr/zmk.uf2
        retention-days: 7
