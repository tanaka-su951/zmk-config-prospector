# ZMK ビルドワークフロー (公式アクション利用版)
# 環境構築を ZMK 公式に任せ、カスタムビルドを実行します。

name: ZMK Custom Build (Official Action)

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. リポジトリのチェックアウト
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    # 2. ZMK公式ビルドアクションを利用してビルド環境を設定・実行
    - name: Build ZMK Firmware using official action
      uses: zmkfirmware/zmk-build-action@main
      with:
        # ZMKのカスタムアプリケーションディレクトリを指定
        # ZMKの公式アクションは、リポジトリルートにあるカスタムファイル群を
        # 自動で認識し、ZMK/Zephyr環境を構築します。
        
        # ターゲットボード
        board: seeeduino_xiao_ble
        # ターゲットシールド
        shield: prospector_scanner
        # カスタムファイルのディレクトリはリポジトリのルート ('.') であることを指定
        config_dir: .
        
    # 3. ビルド成果物のアップロード (アクションが生成したアーティファクトをアップロード)
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: seeeduino_xiao_ble-prospector_scanner
        # 公式アクションの標準出力パスを使用
        path: zmk-build-output/firmware/seeeduino_xiao_ble/seeeduino_xiao_ble_prospector_scanner.uf2
        if-no-files-found: error
        retention-days: 7
