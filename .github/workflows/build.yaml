# ZMK Custom Config Build Workflow (ZMK Setup Actionによる最終解決)

name: Build ZMK Firmware (Ultimate Stable Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BOARD: seeeduino_xiao_ble
      KCONFIG_NONINTERACTIVE: 1

    steps:
    - name: 1. Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    # 🚨 最終修正：Step 2, 3, 4, 5 をすべて削除し、ZMK公式アクションに置き換え 🚨
    - name: 2. Setup ZMK Environment
      uses: zmkfirmware/zmk-setup-action@v0
      with:
        # このアクションが West, Zephyr, Python依存関係, SDK を全て自動でセットアップします。
        # これまでの手動設定はすべてこのアクションが内部で処理します。
        
    - name: 3. Run West Build (ビルド実行)
      run: |
        echo "--- ZMK環境の最終セットアップとビルドの実行 ---"
        
        # ZMK Setup Actionが全ての環境変数を設定済みのため、これらは不要です
        # source zephyr/zephyr-env.sh は不要
        
        # west init の実行ディレクトリからビルドを実行
        west build -s app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DZMK_CONFIG=config \
          -DEXTRA_CONF_FILE=config/prospector_scanner.conf \
          -DEXTRA_KEMAP_OVERLAY=config/prospector_scanner.keymap \
          -DEXTRA_OVERLAY_FILE=config/prospector_scanner.overlay
          

    - name: 4. Archive Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-prospector_scanner
        path: build/zephyr/zmk.uf2
        retention-days: 7
