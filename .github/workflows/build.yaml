name: Build Prospector Firmware (Final Working Version)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMK ツールチェーンがプリインストールされた安定の Docker Hub イメージを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      # 1. クリーンアップとチェックアウト (変更なし)
      - name: Free Disk Space (Custom)
        run: |
          rm -rf /usr/local/lib/android /usr/share/dotnet
          apt clean
          rm -rf /var/lib/apt/lists/*
        shell: bash

      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config

      # 2. west 初期化とアップデート (変更なし)
      - name: Initialize West and Update Modules
        run: |
          CONFIG_DIR="config"
          cat << EOF > $CONFIG_DIR/west.yml
          manifest:
            remotes:
              - name: zmkfirmware
                url-base: https://github.com/zmkfirmware
            projects:
              - name: zmk
                remote: zmkfirmware
                revision: main
                import: app/west.yml
            self:
              path: config
          EOF
          west init -l $CONFIG_DIR
          west update
          echo "ZMK_CONFIG=$PWD/$CONFIG_DIR" >> $GITHUB_ENV
        shell: bash

      # 3. ビルド実行とパスの強制注入
      - name: Perform ZMK Build (Path Re-Injection)
        run: |
          export ZMK_CONFIG="$ZMK_CONFIG" 
          
          # ★★★ 修正: source zephyr/zephyr-env.sh を削除 ★★★
          
          # Zephyr の絶対パスを計算 (west init/updateで zephyr/ が存在することを前提)
          ZEPHYR_CMAKE_DIR="$PWD/zephyr/share/zephyr-package/cmake"
          ZEPHYR_ROOT_DIR="$PWD/zephyr"
          TOOLCHAIN_VARIANT="gnuarmemb"
          TOOLCHAIN_PATH="/opt/toolchains/gnuarmemb"

          echo "=== Starting ZMK Build (Injecting Paths) ==="
          
          # Zephyr のパスを引数として強制注入
          west build -s zmk/app -b seeeduino_xiao_ble -d build/board_only_test -- \
            -DZephyr_DIR="$ZEPHYR_CMAKE_DIR" \
            -DZEPHYR_BASE="$ZEPHYR_ROOT_DIR" \
            -DZEPHYR_TOOLCHAIN_VARIANT="$TOOLCHAIN_VARIANT" \
            -DGNUARMEMB_TOOLCHAIN_PATH="$TOOLCHAIN_PATH"
          
          echo "=== Convert and Finalize ==="

          BIN_PATH="build/board_only_test/zephyr/zephyr.elf"
          if [ -f "$BIN_PATH" ]; then
            echo "SUCCESS: Base board build passed! Converting..."
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "build/board_only_test/zephyr.uf2"
          else
            echo "FATAL: Build failed. Check logs carefully."
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: seeeduino_xiao_ble-base-firmware
          path: build/board_only_test/zephyr.uf2
