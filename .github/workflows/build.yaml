name: Build Prospector Firmware (Local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      - name: Checkout ZMK Config (as config)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: config

      - name: Install Python Venv (Separate for apt)
        run: |
          apt update
          apt install -y python3.12-venv || apt install -y python3-venv
        shell: bash

      - name: Initialize and Build ZMK Firmware (Integrated)
        run: |
          CONFIG_DIR="config"
          SHIELD_DIR="$CONFIG_DIR/boards/shields/prospector_scanner"

          echo "=== 1. Initialize west workspace ==="
          rm -rf zmk zephyr modules .west
          
          # west.yml の内容を強制的に書き込む
          cat << EOF > $CONFIG_DIR/west.yml
          manifest:
            remotes:
              - name: zmkfirmware
                url-base: https://github.com/zmkfirmware
            projects:
              - name: zmk
                remote: zmkfirmware
                revision: main
                import: app/west.yml
            self:
              path: config
          EOF

          # west init と update
          west init -l $CONFIG_DIR
          west update
          
          echo "=== 2. Export Zephyr/ZMK Environment Variables ==="
          west zephyr-export
          
          # ★★★ 最終の修正: SDK パスを明示的にエクスポートし、find_package エラーを回避 ★★★
          # ZMK ビルドコンテナの標準的な SDK パス (バージョンは異なる場合がありますが、このパスで試行)
          export ZEPHYR_TOOLCHAIN_PATH="/opt/toolchains/zephyr-sdk-0.16.1"
          export ZEPHYR_TOOLCHAIN_VARIANT=zephyr
          
          # Python venv のセットアップ
          /usr/bin/python3 -m venv zmk-env
          source zmk-env/bin/activate
          
          REQUIREMENTS_FILE=$(find zmk -name "requirements.txt" -print -quit)
          if [ -n "$REQUIREMENTS_FILE" ]; then
            pip install -r "$REQUIREMENTS_FILE"
          fi
          pip install pyyaml pykwalify
          
          echo "=== 3. Prepare Configuration Files ==="
          rm -rf build/prospector_scanner
          mkdir -p $SHIELD_DIR
          
          # 1. prj.conf
          CONFIG_PRJ_FILE="$CONFIG_DIR/prj.conf"
          echo "# Minimal ZMK config" > "$CONFIG_PRJ_FILE"
          echo "CONFIG_ZMK_KSCAN_MATRIX=y" >> "$CONFIG_PRJ_FILE"

          # 2. Shield conf
          SHIELD_CONF_FILE="$SHIELD_DIR/prospector_scanner.conf"
          echo 'CONFIG_ZMK_KEYBOARD_NAME="Prospector Scanner"' > "$SHIELD_CONF_FILE"

          # 3. Shield Kconfig
          KCONFIG_SHIELD_FILE="$SHIELD_DIR/Kconfig"
          echo '# Kconfig for shield' > "$KCONFIG_SHIELD_FILE"
          echo 'config SHIELD_PROSPECTOR_SCANNER' >> "$KCONFIG_SHIELD_FILE"
          echo '  bool "Prospector Scanner"' >> "$KCONFIG_SHIELD_FILE"
          echo '    default y' >> "$KCONFIG_SHIELD_FILE"
          
          echo "=== 4. Start ZMK Build ==="
          
          # ZMK_CONFIG のみを使用
          west build -s zmk/app -b seeeduino_xiao_ble -d build/prospector_scanner -- \
            -DSHIELD=prospector_scanner \
            -DZMK_CONFIG="$PWD/$CONFIG_DIR"
          
          echo "=== 5. Convert and Finalize ==="

          BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
          UF2_PATH="build/prospector_scanner/zmk.uf2"

          if [ -f "$BIN_PATH" ]; then
            echo "Converting ELF → UF2"
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
          else
            echo "FATAL: Build failed, zephyr.elf not found."
            ls -R build/prospector_scanner
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble-zmk
          path: build/prospector_scanner/zmk.uf2
