# ZMK Custom Config Build Workflow (外部アクション非使用)

name: Build ZMK Firmware (Actionless)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: Setup Environment and Install Dependencies
      run: |
        # 1. ZMKのビルドに必要なwestをインストール
        pip install west
        
        # 2. ZMKコアを手動でクローン (クローン失敗回避のため)
        echo "--- DEBUG: Cloning ZMK Core ---"
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # 3. west initとwest updateを実行し、Zephyrとカスタムモジュールを取得
        echo "--- Running west init and update ---"
        west init -l .
        west update
        
        # 🚨 CRITICAL FIX: Zephyr環境変数とCMake設定をエクスポート
        # west zephyr-exportの出力（環境設定コマンド）をファイルに保存し、
        # 次のステップで読み込めるようにします。
        echo "--- CRITICAL: Exporting Zephyr Environment for next step ---"
        west zephyr-export > zephyr_env.sh
        
        # 4. ZMK Python要件をインストール
        pip install -r zmk/requirements.txt || true
        
    # NOTE: 'Install ZMK Python Dependencies' ステップは削除し、上記に統合されました。

    - name: Build ZMK Firmware
      # west build を実行し、キーボード設定をビルドします。
      run: |
        # 🚨 CRITICAL FIX: 前のステップで作成した環境変数を読み込む
        # これにより、west buildがZephyrの場所を認識できるようになります。
        source zephyr_env.sh
        
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
