name: Build Prospector Firmware (Local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
    - name: Checkout ZMK Config (as app)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: app 

    - name: Install Python Venv
      run: |
        apt update
        apt install -y python3.12-venv || apt install -y python3-venv
      shell: bash

    - name: Initialize and Update west workspace
      run: |
        echo "Initializing west workspace using ZMK's manifest..."
        rm -rf zmk zephyr modules .west
        
        west init -m https://github.com/zmkfirmware/zmk --mf app/west.yml
        
        echo "Updating west modules..."
        west update
        
        echo "Exporting Zephyr environment variables..."
        west zephyr-export
        
        echo "Verifying west environment..."
        west list
      shell: bash

    - name: Set up Python Environment
      run: |
        /usr/bin/python3 -m venv zmk-env
        source zmk-env/bin/activate

        REQUIREMENTS_FILE=$(find zmk -name "requirements.txt" -print -quit)
        if [ -n "$REQUIREMENTS_FILE" ]; then
          echo "Installing dependencies from: $REQUIREMENTS_FILE"
          pip install -r "$REQUIREMENTS_FILE"
        else
          echo "Warning: requirements.txt not found!"
        fi
        
        pip install pyyaml pykwalify
      shell: bash

    - name: Build Shield:prospector_scanner (seeeduino_xiao_ble)
      run: |
        source zmk-env/bin/activate
        
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
        
        rm -rf build/prospector_scanner

        CONFIG_DIR="app"
        SHIELD_DIR="$CONFIG_DIR/boards/shields/prospector_scanner"
        
        mkdir -p $SHIELD_DIR
        
        echo "Ensuring ZMK configuration files exist..."
        
        # 1. prj.conf
        CONFIG_PRJ_FILE="$CONFIG_DIR/prj.conf"
        echo "# Minimal ZMK config" > "$CONFIG_PRJ_FILE"
        echo "CONFIG_ZMK_KSCAN_MATRIX=y" >> "$CONFIG_DIR/prj.conf"

        # 2. Shield conf
        SHIELD_CONF_FILE="$SHIELD_DIR/prospector_scanner.conf"
        echo 'CONFIG_ZMK_KEYBOARD_NAME="Prospector Scanner"' > "$SHIELD_CONF_FILE"

        # 3. Kconfig
        KCONFIG_FILE="$SHIELD_DIR/Kconfig"
        echo '# Kconfig for shield' > "$KCONFIG_FILE"
        echo 'config SHIELD_PROSPECTOR_SCANNER' >> "$KCONFIG_FILE"
        echo '  bool "Prospector Scanner"' >> "$KCONFIG_FILE"
        echo '    default y' >> "$KCONFIG_FILE"
        
        # 4. CMakeLists.txt (削除: 衝突を避ける)
        rm -f "$CONFIG_DIR/CMakeLists.txt"
        
        echo "=== Starting ZMK Build (via west build, final configuration) ==="
        
        # ★★★ 最終的なビルドコマンド: EXTRA_KCONFIG_SOURCES に Kconfig ファイルのパスを直接指定 ★★★
        # ZMK コアソースをターゲットとし、カスタム設定ファイルを外部から注入する
        west build -s zmk/app -b seeeduino_xiao_ble -d build/prospector_scanner -- \
          -DSHIELD=prospector_scanner \
          -DEXTRA_KCONFIG_SOURCES="$PWD/$KCONFIG_FILE" \
          -DEXTRA_CONF_FILE="$PWD/$CONFIG_PRJ_FILE;$PWD/$SHIELD_CONF_FILE"
        
        BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
        UF2_PATH="build/prospector_scanner/zmk.uf2"

        if [ -f "$BIN_PATH" ]; then
          echo "Converting ELF → UF2"
          python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
        else
          echo "FATAL: Build failed, zephyr.elf not found."
          ls -R build/prospector_scanner
          exit 1
        fi
      shell: bash

    - name: Archive production artifacts (Artifact Upload)
      uses: actions/upload-artifact@v4
      with:
        name: prospector_scanner-seeeduino_xiao_ble-zmk
        path: build/prospector_scanner/zmk.uf2
