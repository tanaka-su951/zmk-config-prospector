name: Build Prospector Firmware (Local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMKの標準ビルド環境コンテナを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
    - name: Checkout ZMK Config and Module
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Python Venv
      run: |
        apt update
        apt install -y python3.12-venv || apt install -y python3-venv
      shell: bash

    - name: Initialize and Update west workspace
      run: |
        # ZMKのmanifest URLとファイルを明示的に指定
        west init -m https://github.com/zmkfirmware/zmk --mf app/west.yml
        west update
      shell: bash

    # ★★★ 新規追加ステップ：強制クリーンアップ (キャッシュ削除) ★★★
    - name: Force Clean Build Cache
      run: |
        # 古いビルドキャッシュとモジュールを完全に削除し、クリーンな環境を確保
        rm -rf build modules
      shell: bash

    # ★★★ ZMK App CMakeLists.txt にカスタム設定をフック ★★★
    - name: Hook Custom Config into ZMK App
      run: |
        # zmk/app/CMakeLists.txt の最上部に 'add_subdirectory(../../config)' を追記
        # これにより、ZMKのビルドプロセスの早い段階でカスタム設定を強制的に認識させる
        echo 'add_subdirectory(../../config)' | cat - zmk/app/CMakeLists.txt > temp && mv temp zmk/app/CMakeLists.txt
      shell: bash

    - name: Debug ZMK Source Location
      run: |
        echo "Listing contents of workspace root:"
        ls -F
        echo "Listing contents of zmk/ (if exists):"
        ls -F zmk || echo "ZMK directory not found, check west.yml configuration."
        echo "Listing contents of modules/ (if exists):"
        ls -F modules || echo "Modules directory not found, check west.yml configuration."
      shell: bash
      
    - name: Set up Python Environment
      run: |
        /usr/bin/python3 -m venv zmk-env
        source zmk-env/bin/activate
        
        # ZMKの依存関係をインストール
        REQUIREMENTS_FILE=$(find . -name "requirements.txt" -path "*zmk*" -print -quit || find . -name "requirements.txt" -print -quit)
        if [ -n "$REQUIREMENTS_FILE" ]; then
            echo "Found requirements file at: $REQUIREMENTS_FILE"
            pip install -r "$REQUIREMENTS_FILE"
        else
            echo "Warning: requirements.txt not found. Continuing build in case dependencies are pre-installed."
        fi
      shell: bash

    - name: Build Shield:prospector_scanner (seeeduino_xiao_ble)
      run: |
        source zmk-env/bin/activate
        west zephyr-export
        # カスタムモジュールが隔離された、クリーンなビルドコマンド
        west build -s zmk/app -d build/prospector_scanner -b seeeduino_xiao_ble -- \
          -DSHIELD="prospector_scanner" \
          -DCMAKE_VERBOSE_MAKEFILE=ON
      shell: bash

    - name: Archive production artifacts (Artifact Upload)
      uses: actions/upload-artifact@v4
      with:
        name: prospector_scanner-seeeduino_xiao_ble-zmk
        path: build/prospector_scanner/zephyr/zmk.uf2
