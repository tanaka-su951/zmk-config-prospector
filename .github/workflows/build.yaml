# ZMK Custom Config Build Workflow (SDK自動検出による最終修正)

name: Build ZMK Firmware (Final Attempt)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config and Submodules
      uses: actions/checkout@v4
      with:
        # サブモジュールの設定はGit/Westの問題のため無効化
        submodules: false
        fetch-depth: 0

    - name: Setup Python Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv git
        python3 -m pip install -U west

    - name: --- 🚨 ZMK コアの手動クローンと初期化 🚨 ---
      run: |
        # 過去の失敗で残されたwest設定とZMKフォルダを削除し、クリーンな状態を保証
        echo "--- DEBUG: Cleaning up old artifacts ---"
        rm -rf .west zmk
        
        # ZMKコアリポジトリを手動でクローン（以前のビルドで成功したステップ）
        echo "--- DEBUG: Cloning ZMK Core ---"
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # west init と west update で Zephyr やその他のカスタムモジュールを取得
        west init -l .
        echo "--- DEBUG: Running west update for remaining dependencies ---"
        west update
        
    - name: Install ZMK Python Dependencies
      run: pip install -r zmk/requirements.txt || true

    # 🚨 最終修正: Zephyr SDKの環境設定を公式アクションに任せる 🚨
    # このアクションが、正しい ZEPHYR_SDK_INSTALL_DIR を設定するはずです。
    - name: Set up Zephyr environment
      uses: actions/setup-tool-cache@v3 # GitHub Actionsの標準機能でツールをキャッシュ/セットアップ
      with:
        tool: zephyr
        version: '0.16.5' # ZMKの現在の要求バージョンに合わせて設定

    - name: Build ZMK Firmware
      # west build を実行し、キーボード設定をビルドします。
      run: |
        # ZMK/Zephyr環境をソース設定してからビルド
        source "$HOME/.local/bin/activate" 
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
