# ZMK Custom Config Build Workflow (安定版v3.5.0の強制)

name: Build ZMK Firmware (Stable Tag Forced)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: --- 🚨 セットアップと初期化の実行（v3.5.0へ固定） 🚨 ---
      run: |
        echo "--- 0. westをインストール ---"
        pip install west
        
        echo "--- 1. ZMKコアを深くクローン ---"
        rm -rf .west zmk # クリーンアップ
        git clone --depth 50 https://github.com/zmkfirmware/zmk zmk
        
        echo "--- 2. ZMKコアを安定版タグ zmk-v3.5.0 にチェックアウト ---"
        cd zmk
        # 安定版タグに強制的に切り替える
        git fetch origin tag zmk-v3.5.0
        git checkout zmk-v3.5.0
        cd .. # 元のディレクトリに戻る
        
        echo "--- 3. west init と update ---"
        # west update は v3.5.0 のコードに合わせて依存関係を取得する
        west init -l .
        west update
        
        echo "--- 4. Zephyr SDKのインストール ---"
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.0/zephyr-sdk-0.16.0_linux-x86_64.tar.xz
        mkdir -p $HOME/zephyr-sdk
        tar xf zephyr-sdk-0.16.0_linux-x86_64.tar.xz -C $HOME/zephyr-sdk --strip-components=1
        
        echo "--- 5. ZMK Python要件をインストール ---"
        pip install -r zmk/requirements.txt || true

    - name: --- 🚨 ビルドとKconfig対話モードの強制回避 🚨 ---
      run: |
        # 究極の対話モード回避策を環境変数で設定
        export KCONFIG_NONINTERACTIVE=1
        
        # Zephyr 環境を初期化
        echo "--- Sourcing Zephyr environment setup.sh ---"
        source $HOME/zephyr-sdk/setup.sh
        
        # ダミー設定を作成
        mkdir -p build/zephyr/
        echo "CONFIG_ZMK_CONFIG_NAME=\"prospector\"" > build/zephyr/.config
        
        # ZMK Firmwareのビルドを実行 (v3.5.0に固定されているため安定性が高い)
        echo "--- Starting west build (Stable Avoidance) ---"
        west build -s zmk/app -d build --sysbuild \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DCONFIG_BUILD_WITH_CMAKE=n

    # ビルド後の成果物アップロードステップ
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
