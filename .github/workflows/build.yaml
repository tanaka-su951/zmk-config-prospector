# ZMK Custom Config Build Workflow (究極の最終版 - west init 修正)

name: Build ZMK Firmware (Ultimate Stable Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BOARD: seeeduino_xiao_ble
      KCONFIG_NONINTERACTIVE: 1

    steps:
    - name: 1. Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: 2. Install West Tool
      run: pip install west

    - name: 3. Initialize West Workspace and Download Dependencies
      run: |
        echo "--- ZMKワークスペースを構築 ---"
        
        # 🚨 修正: ZMKのソースコードを 'zmk' フォルダにダウンロードし、標準 west.yml で初期化
        # ZMKソースコードを 'zmk' フォルダに配置
        west init -m https://github.com/zmkfirmware/zmk --mr main --mf app/west.yml zmk 

        # ワークスペースに移動して、あなたのカスタム west.yml を使って依存関係を更新
        # 注: ZMKの west init 後、このリポジトリのルート (./) にある west.yml が参照されます
        west update

    - name: 4. Install Python Dependencies, SDK, and Set Environment
      run: |
        echo "--- Python依存関係をインストールとZephyr SDKのセットアップ ---"
        
        # Python依存関係のインストール
        pip install -r zephyr/scripts/requirements.txt
        
        # SDKの明示的なインストールとパス設定 (v0.16.5)
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.5/zephyr-sdk-0.16.5_linux-x86_64.tar.xz -O /tmp/zephyr-sdk.tar.xz
        
        SDK_ROOT="${{ runner.tool_cache }}/zephyr-sdk-0.16.5"
        mkdir -p ${SDK_ROOT}
        
        tar xf /tmp/zephyr-sdk.tar.xz -C ${SDK_ROOT} --strip-components=1
        
        # 環境変数の設定
        echo "ZEPHYR_SDK_INSTALL_DIR=${SDK_ROOT}" >> $GITHUB_ENV
        echo "ZEPHYR_BASE=${{ github.workspace }}/zephyr" >> $GITHUB_ENV
        west zephyr-export | grep -E "^export " | sed -E 's/^export\s+//' >> $GITHUB_ENV

    - name: 5. Run West Build (ビルド実行)
      run: |
        echo "--- Zephyr環境の最終セットアップとビルドの実行 ---"
        
        # ZMKのアプリディレクトリを指定してビルド
        west build -s zmk/app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DZMK_CONFIG=config 
          

    - name: 6. Archive Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-prospector_scanner
        path: build/zephyr/zmk.uf2
        retention-days: 7
