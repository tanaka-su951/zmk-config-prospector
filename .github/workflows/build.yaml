# ZMK Custom Config Build Workflow (外部アクション/複数ステップ依存の排除)

name: Build ZMK Firmware (Single-Step)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: --- 🚀 ZMK環境セットアップとビルド (単一ステップ) 🚀 ---
      run: |
        # 1. ビルドツール (west) をインストール
        echo "--- 1. Installing West ---"
        pip install west
        
        # 2. ZMKコアを手動でクローン (west updateの失敗を回避)
        echo "--- 2. Cloning ZMK Core ---"
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # 3. west init と west update を実行し、Zephyrと依存関係を取得
        echo "--- 3. Running west init and update ---"
        west init -l .
        west update
        
        # 4. ZMK Python要件をインストール
        echo "--- 4. Installing Python Dependencies ---"
        pip install -r zmk/requirements.txt || true
        
        # 5. Toolchain（ARM GCC）をインストール
        # west zephyr-exportに代わる処理: westがToolchainの場所を把握するために必要
        echo "--- 5. Installing Toolchain ---"
        west zephyr-export
        
        # 6. ZMK Firmwareをビルド
        # すべてが同じセッションで実行されるため、環境変数は有効です
        echo "--- 6. Running ZMK Build ---"
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE
          
        # ビルド成果物 (uf2ファイル) の確認
        if [ -f "build/zephyr/zmk.uf2" ]; then
          echo "✅ Build Successful! Firmware path: build/zephyr/zmk.uf2"
        else
          echo "❌ FATAL: ZMK firmware file not found after build."
          exit 1
        fi

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
