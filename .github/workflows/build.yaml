# ZMK Custom Config Build Workflow (Dockerコンテナ内で実行)

name: Build ZMK Firmware (Docker Container Final)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    # 🚨 Ubuntuランナーではなく、ZMKビルドコンテナ内で実行 🚨
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/zmkfirmware/zmk-build-arm:stable
      
    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: --- 🚨 ビルド環境の初期化 🚨 ---
      # コンテナ内にはwestはインストール済みだが、ZMKコアリポジトリの依存関係を更新する
      run: |
        echo "--- Running west init and update ---"
        west init -l .
        west update

    - name: --- 🚨 ビルド実行 (コンテナ環境) 🚨 ---
      # 環境が既に設定されているため、west buildをシンプルなコマンドで実行
      run: |
        echo "--- Starting west build ---"
        # コンテナ環境ではKCONFIG_NONINTERACTIVEは自動で設定されている
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    # ビルド後の成果物アップロードステップ
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
