# ZMK Custom Config Build Workflow (究極の最終版 - ZMK公式アクション最終修正)

name: Build ZMK Firmware (Ultimate Stable Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BOARD: seeeduino_xiao_ble
      KCONFIG_NONINTERACTIVE: 1

    steps:
    - name: 1. Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: 2. Install West Tool
      run: pip install west

    - name: 3. Initialize West Workspace and Download Dependencies
      run: |
        echo "--- ZMKワークスペースを構築 ---"
        west init -m https://github.com/zmkfirmware/zmk --mr main --mf app/west.yml .
        west update

    - name: 4. Install Python Dependencies and Set Environment
      run: |
        echo "--- Python依存関係をインストールと環境変数の永続化 ---"
        pip install -r zephyr/scripts/requirements.txt
        
        echo "ZEPHYR_BASE=${{ github.workspace }}/zephyr" >> $GITHUB_ENV
        west zephyr-export | grep -E "^export " | sed -E 's/^export\s+//' >> $GITHUB_ENV

    - name: 5. Setup Zephyr Toolchain (SDK)
      # 🚨 最終修正：アクション名を zmkfirmware/setup-toolchain (単数形) に修正 🚨
      uses: zmkfirmware/setup-toolchain@v1

    - name: 6. Run West Build (ビルド実行)
      run: |
        echo "--- Zephyr環境の最終セットアップとビルドの実行 ---"
        
        # Toolchainアクションが環境を設定しますが、互換性のために残します
        source zephyr/zephyr-env.sh
        
        west build -s zmk/app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DZMK_CONFIG=config \
          -DEXTRA_CONF_FILE=config/prospector_scanner.conf \
          -DEXTRA_KEMAP_OVERLAY=config/prospector_scanner.keymap \
          -DEXTRA_OVERLAY_FILE=config/prospector_scanner.overlay
          

    - name: 7. Archive Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-prospector_scanner
        path: build/zephyr/zmk.uf2
        retention-days: 7
