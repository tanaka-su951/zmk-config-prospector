# ZMKファームウェア ビルドワークフロー

name: Build ZMK Firmware

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    # ワークフロー全体でデフォルトの作業ディレクトリを設定 (ルートを指定)
    defaults:
      run:
        working-directory: ${{ github.workspace }}
        
    runs-on: ubuntu-latest
    
    # ZMKビルド用Dockerコンテナを使用
    container: zmkfirmware/zmk-build-arm:stable
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. リポジトリとサブモジュールをチェックアウト
      - name: Checkout user configuration and ZMK submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          
      # 2. 依存関係の初期化、更新、ビルドの実行（全てを単一のセッションで実行）
      # west updateが成功すれば、zmk/appフォルダは必ず存在します。
      - name: Initialize, Update Dependencies, and Build
        run: |
          # ワークスペースの初期化と依存関係の更新
          echo "Running west init and update..."
          west init -l .
          west update --rebase
          
          # ZMKファームウェアのビルドを実行
          echo "Running west build..."
          west build -s zmk/app -p -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }}
          
      # 3. Archive firmware
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.shield }}-${{ matrix.board }}
          path: build/zephyr/zephyr.uf2
