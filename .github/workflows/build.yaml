name: Build Prospector Firmware (Final Stability Version)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMK ツールチェーンがプリインストールされた安定の Docker Hub イメージを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      # 1. ディスク容量のクリーンアップ
      - name: Free Disk Space (Custom)
        run: |
          rm -rf /usr/local/lib/android /usr/share/dotnet
          apt clean
          rm -rf /var/lib/apt/lists/*
        shell: bash

      # 2. カスタム設定をチェックアウト (リポジトリのルートに配置)
      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          # config ディレクトリがワークスペースのルートに配置される
          path: config

      # 3. west 初期化、アップデート、環境変数設定
      # ZMK のチェックアウトと依存関係の取得を west update に任せます
      - name: Initialize West and Update Modules
        run: |
          CONFIG_DIR="config"

          echo "=== 1. Setup west workspace and west.yml ==="
          
          # west.yml を作成
          # ZMK リポジトリは west update で取得されます
          cat << EOF > $CONFIG_DIR/west.yml
          manifest:
            remotes:
              - name: zmkfirmware
                url-base: https://github.com/zmkfirmware
            projects:
              - name: zmk
                remote: zmkfirmware
                revision: main
                import: app/west.yml
            self:
              path: config
          EOF

          # west initとupdateを実行
          west init -l $CONFIG_DIR
          west update
          
          # ZMK_CONFIG を環境変数として次ステップに渡す
          echo "ZMK_CONFIG=$PWD/$CONFIG_DIR" >> $GITHUB_ENV
          
        shell: bash

      # 4. ビルド実行
      # シールド設定なしで、ボード単体のビルドを試行し、Zephyr環境の検出を west に任せます。
      - name: Perform ZMK Build (Minimal Test)
        run: |
          export ZMK_CONFIG="$ZMK_CONFIG" 
          
          # west が Zephyr 環境を自動で検出できるかテストするため、パスの注入を全て削除します。
          # Zephyr環境ファイルが正しく存在すれば、west build は成功するはずです。
          
          echo "=== Starting ZMK Build (Testing Minimal Setup) ==="
          
          # パス注入なしで west build を実行
          west build -s zmk/app -b seeeduino_xiao_ble -d build/board_only_test
          
          echo "=== Test Complete ==="

          # ビルドが成功したかどうかの確認
          BIN_PATH="build/board_only_test/zephyr/zephyr.elf"
          if [ -f "$BIN_PATH" ]; then
            echo "SUCCESS: Base board build passed!"
          else
            echo "FATAL: Base board build failed. Inspect build/board_only_test/CMakeCache.txt for detailed errors."
            exit 1
          fi
        shell: bash

      # 5. Artifact Upload はビルド成功後に戻します
