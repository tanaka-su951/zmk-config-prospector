name: Build Prospector Firmware (Local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      - name: Install Python Venv (Separate for apt)
        run: |
          apt update
          apt install -y python3.12-venv || apt install -y python3-venv
        shell: bash

      - name: Checkout ZMK Repository
        uses: actions/checkout@v4
        with:
          repository: zmkfirmware/zmk
          ref: main 
          path: zmk

      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config # カスタム設定を 'config' フォルダにチェックアウト

      - name: Initialize and Build ZMK Firmware (Integrated)
        run: |
          SHIELD_NAME="prospector_scanner"
          CONFIG_DIR="config"

          echo "=== 1. Setup west workspace and west.yml ==="
          
          # west init が config/west.yml を見つけられるように、これを config フォルダに書き込む
          cat << EOF > $CONFIG_DIR/west.yml
          manifest:
            remotes:
              - name: zmkfirmware
                url-base: https://github.com/zmkfirmware
            projects:
              - name: zmk
                remote: zmkfirmware
                revision: main
                import: app/west.yml
            self:
              path: config
          EOF

          # west init -l config でローカルの west.yml を使用
          west init -l $CONFIG_DIR
          west update
          
          echo "=== 2. Export Zephyr/ZMK Environment Variables ==="
          west zephyr-export
          
          # 環境変数設定
          export ZEPHYR_MODULES="$PWD/zmk;$PWD/$CONFIG_DIR" # ZMK とカスタム設定の両方をモジュールとして指定
          export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
          export GNUARMEMB_TOOLCHAIN_PATH="/opt/toolchains/gnuarmemb"
          
          # zephyr-env.sh を source 
          ZEPHYR_ENV_SCRIPT="$PWD/zephyr/zephyr-env.sh"
          if [ -f "$ZEPHYR_ENV_SCRIPT" ]; then
              source "$ZEPHYR_ENV_SCRIPT"
          fi

          # Python venv のセットアップ
          /usr/bin/python3 -m venv zmk-env
          source zmk-env/bin/activate
          
          REQUIREMENTS_FILE=$(find zmk -name "requirements.txt" -print -quit)
          if [ -n "$REQUIREMENTS_FILE" ]; then
            pip install -r "$REQUIREMENTS_FILE"
          fi
          pip install pyyaml pykwalify
          
          echo "=== 3. Start ZMK Build (ZEPHYR_EXTRA_MODULES style) ==="
          
          # ZMK_CONFIG は不要 (カスタム設定を ZEPHYR_MODULES 経由で渡すため)
          west build -s zmk/app -b seeeduino_xiao_ble -d build/prospector_scanner -- \
            -DSHIELD=$SHIELD_NAME
          
          echo "=== 4. Convert and Finalize ==="

          BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
          UF2_PATH="build/prospector_scanner/zmk.uf2"

          if [ -f "$BIN_PATH" ]; then
            echo "Converting ELF → UF2"
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
          else
            echo "FATAL: Build failed, zephyr.elf not found."
            ls -R build/prospector_scanner
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble-zmk
          path: build/prospector_scanner/zmk.uf2
