# ZMK Custom Config Build Workflow (Zephyr SDK 手動# ZMK Custom Config Build Workflow (Zephyr SDK 環境設定)

name: Build ZMK Firmware (Manual SDK Setup)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: Setup Build Environment (West, Python)
      run: |
        # 1. ZMKのビルドに必要なwestをインストール
        pip install west
        
        # 2. ZMKコアを手動でクローン (クローン失敗回避のため)
        echo "--- DEBUG: Cloning ZMK Core ---"
        rm -rf .west zmk # クリーンアップ
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # 3. west initとwest updateを実行し、Zephyrとカスタムモジュールを取得
        echo "--- Running west init and update ---"
        west init -l .
        west update
        
        # 4. ZMK Python要件をインストール
        pip install -r zmk/requirements.txt || true

    - name: Setup Zephyr Toolchain (SDK)
      run: |
        echo "--- Setting up Zephyr SDK ---"
        # Zephyr SDKのインストール
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.0/zephyr-sdk-0.16.0_linux-x86_64.tar.xz
        mkdir -p $HOME/zephyr-sdk
        tar xf zephyr-sdk-0.16.0_linux-x86_64.tar.xz -C $HOME/zephyr-sdk --strip-components=1
        
        # 🚨 ZMKビルドのためにSDKの環境変数を強制的に設定
        # このステップがないと、CMakeがSDKを見つけられずに失敗します。
        echo "--- Exporting ZEPHYR_TOOLCHAIN_VARIANT and ZEPHYR_SDK_INSTALL_DIR ---"
        echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
        echo "ZEPHYR_SDK_INSTALL_DIR=$HOME/zephyr-sdk" >> $GITHUB_ENV

    - name: Build ZMK Firmware
      # west build を実行し、キーボード設定をビルドします。
      run: |
        # 環境変数が設定されていることを確認
        echo "SDK Path: $ZEPHYR_SDK_INSTALL_DIR"
        
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
