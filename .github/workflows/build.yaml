name: Build Prospector Firmware (Local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
    - name: Checkout ZMK Config (as config)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: config

    - name: Force Workspace Cleanup
      run: |
        echo "Cleaning workspace..."
        rm -rf build zmk modules zephyr *~
      shell: bash

    - name: Install Python Venv
      run: |
        apt update
        apt install -y python3.12-venv || apt install -y python3-venv
      shell: bash

    # ✅ 修正版：ZMKを公式リポジトリから取得する形
    - name: Initialize and Update west workspace
      run: |
        west init -m https://github.com/zmkfirmware/zmk --mf app/west.yml
        west update
        west zephyr-export
      shell: bash

    - name: Debug ZMK Source Location
      run: |
        echo "Listing workspace structure..."
        ls -F
        echo "--- zmk ---"
        ls -F zmk
        echo "--- zephyr ---"
        ls -F zephyr
        echo "--- modules ---"
        ls -F modules
      shell: bash

    - name: Set up Python Environment
      run: |
        /usr/bin/python3 -m venv zmk-env
        source zmk-env/bin/activate
        pip install -r zmk/app/requirements.txt
      shell: bash

    - name: Build Shield:prospector_scanner (seeeduino_xiao_ble)
      run: |
        source zmk-env/bin/activate
        west zephyr-export
        
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb

        # クリーンビルド
        rm -rf build/prospector_scanner
        mkdir -p build/prospector_scanner

        CONFIG_DIR="config"
        PRJ_CONF="$CONFIG_DIR/prj.conf"
        SHIELD_CONF="$CONFIG_DIR/prospector_scanner.conf"
        CMAKELIST="$CONFIG_DIR/CMakeLists.txt"

        echo "Ensuring ZMK config files exist..."
        if [ ! -f "$PRJ_CONF" ]; then
          echo "Creating missing prj.conf"
          echo "# Minimal ZMK config" > "$PRJ_CONF"
          echo 'CONFIG_ZMK_KSCAN_MATRIX=y' >> "$PRJ_CONF"
        fi
        echo "# Force rebuild at $(date +%s)" >> "$PRJ_CONF"

        if [ ! -f "$SHIELD_CONF" ]; then
          echo "Creating missing shield configuration file"
          echo 'CONFIG_ZMK_KEYBOARD_NAME="Prospector Scanner"' > "$SHIELD_CONF"
        fi

        echo "Removing custom CMakeLists.txt to use ZMK defaults..."
        rm -f "$CMAKELIST"

        echo "=== Starting ZMK Build ==="
        west build -s zmk/app -d build/prospector_scanner -b seeeduino_xiao_ble -- \
          -DSHIELD=prospector_scanner \
          -DCMAKE_VERBOSE_MAKEFILE=ON

        BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
        UF2_PATH="build/prospector_scanner/zmk.uf2"

        if [ -f "$BIN_PATH" ]; then
          echo "Converting ELF to UF2..."
          python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
        else
          echo "FATAL: Build failed, zephyr.elf not found."
          ls -R build/prospector_scanner/
          exit 1
        fi
      shell: bash

    - name: Archive production artifacts (Artifact Upload)
      uses: actions/upload-artifact@v4
      with:
        name: prospector_scanner-seeeduino_xiao_ble-zmk
        path: build/prospector_scanner/zmk.uf2
 -F modules || echo "Modules directory not found, check west.yml configuration."
        echo "Listing contents of zephyr/ (if exists):"
        ls -F zephyr || echo "Zephyr directory not found. Check west update results."
      shell: bash
      
    - name: Set up Python Environment
      run: |
        /usr/bin/python3 -m venv zmk-env
        source zmk-env/bin/activate

        # ZMK依存パッケージを自動インストール
        REQUIREMENTS_FILE=$(find . -name "requirements.txt" -path "*zmk*" -print -quit || find . -name "requirements.txt" -path "*zmk-config-prospector*" -print -quit || find . -name "requirements.txt" -print -quit)
        if [ -n "$REQUIREMENTS_FILE" ]; then
            echo "Found requirements file at: $REQUIREMENTS_FILE"
            pip install -r "$REQUIREMENTS_FILE"
        else
            echo "Warning: requirements.txt not found. Continuing build."
        fi
      shell: bash

    - name: Build Shield:prospector_scanner (seeeduino_xiao_ble)
      run: |
        source zmk-env/bin/activate
        west zephyr-export
        
        # 環境パス設定
        ZEPHYR_BASE_PATH="$PWD/zephyr"
        ZEPHYR_PREFIX_PATH="$PWD/zephyr/share"
        export ZEPHYR_BASE="$ZEPHYR_BASE_PATH"
        export CMAKE_PREFIX_PATH="$ZEPHYR_PREFIX_PATH"
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
        
        # クリーンビルド
        rm -rf build/prospector_scanner
        mkdir -p build/prospector_scanner

        CONFIG_DIR="config"
        PRJ_CONF="$CONFIG_DIR/prj.conf"
        SHIELD_CONF="$CONFIG_DIR/prospector_scanner.conf"
        CMAKELIST="$CONFIG_DIR/CMakeLists.txt"

        echo "Ensuring ZMK config files exist..."
        if [ ! -f "$PRJ_CONF" ]; then
          echo "Creating missing prj.conf"
          echo "# Minimal ZMK build config" > "$PRJ_CONF"
          echo 'CONFIG_ZMK_KSCAN_MATRIX=y' >> "$PRJ_CONF"
        fi
        echo "# Force rebuild at $(date +%s)" >> "$PRJ_CONF"

        if [ ! -f "$SHIELD_CONF" ]; then
          echo "Creating missing shield configuration file"
          echo 'CONFIG_ZMK_KEYBOARD_NAME="Prospector Scanner"' > "$SHIELD_CONF"
        fi

        echo "Removing custom CMakeLists.txt to use ZMK defaults..."
        rm -f "$CMAKELIST"

        echo "=== Starting ZMK Build ==="
        west build -s zmk/app -d build/prospector_scanner -b seeeduino_xiao_ble -- \
          -DSHIELD=prospector_scanner \
          -DZEPHYR_BASE="$ZEPHYR_BASE_PATH" \
          -DCMAKE_PREFIX_PATH="$ZEPHYR_PREFIX_PATH" \
          -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
          -DCMAKE_VERBOSE_MAKEFILE=ON

        echo "=== Rebuilding to ensure cache cleared ==="
        BUILD_DIR="build/prospector_scanner"
        rm -f $BUILD_DIR/CMakeCache.txt
        rm -rf $BUILD_DIR/CMakeFiles

        west build -s zmk/app -d build/prospector_scanner -t all

        BIN_PATH="build/prospector_scanner/zephyr/zephyr.elf"
        UF2_PATH="build/prospector_scanner/zmk.uf2"
        
        if [ -f "$BIN_PATH" ]; then
          echo "Converting ELF to UF2..."
          python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "$UF2_PATH"
        else
          echo "FATAL: Build failed, zephyr.elf not found."
          ls -R build/prospector_scanner/
          exit 1
        fi
      shell: bash

    - name: Archive production artifacts (Artifact Upload)
      uses: actions/upload-artifact@v4
      with:
        name: prospector_scanner-seeeduino_xiao_ble-zmk
        path: build/prospector_scanner/zmk.uf2
