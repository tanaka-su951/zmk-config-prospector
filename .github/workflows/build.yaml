name: Build Prospector Firmware (Final Working Version)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMK ツールチェーンがプリインストールされた安定の Docker Hub イメージを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      # 1. クリーンアップとチェックアウト (変更なし)
      - name: Free Disk Space (Custom)
        run: |
          rm -rf /usr/local/lib/android /usr/share/dotnet
          apt clean
          rm -rf /var/lib/apt/lists/*
        shell: bash

      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config # カスタム設定を config/ に配置

      # 2. ZMK 環境の手動セットアップ (west init の代わり)
      - name: Manual ZMK/Zephyr Setup
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "=== ZMK/Zephyr Manual Setup ==="
          
          # Git Clone URLs
          ZMK_REPO="https://x-access-token:$GH_TOKEN@github.com/zmkfirmware/zmk"
          ZEPHYR_REPO="https://x-access-token:$GH_TOKEN@github.com/zephyrproject-rtos/zephyr" 

          # ZMK と Zephyr を現在のディレクトリにクローン
          git clone --depth 1 -b main $ZMK_REPO zmk
          git clone --depth 1 -b v3.5.0 $ZEPHYR_REPO zephyr

          # ZMK のサブモジュールを更新 (ZMK 依存関係の処理)
          cd zmk
          git submodule update --init --recursive
          cd ..
          
          # 環境変数を設定
          echo "ZEPHYR_BASE=$PWD/zephyr" >> $GITHUB_ENV
          echo "ZMK_CONFIG=$PWD/config" >> $GITHUB_ENV
          
          # west がワークスペースを認識するための最小限の .west/ フォルダを作成
          # ZMK の公式アクションがこの方法でワークスペースを認識させます。
          mkdir .west
          touch .west/config
          
          # west update を実行し、環境設定を完了
          west update
          
        shell: bash

      # 3. ビルド実行と環境の初期化
      - name: Perform ZMK Build (Final Build)
        run: |
          export ZMK_CONFIG="$ZMK_CONFIG" 
          export ZEPHYR_BASE="$ZEPHYR_BASE"

          # zephyr-env.sh を source し、パスを環境変数にロード
          ZEPHYR_ENV_SCRIPT="$ZEPHYR_BASE/zephyr-env.sh"
          
          if [ -f "$ZEPHYR_ENV_SCRIPT" ]; then
              source "$ZEPHYR_ENV_SCRIPT"
          else
              echo "FATAL: zephyr-env.sh not found."
              exit 1
          fi

          echo "=== Starting ZMK Build ==="
          
          rm -rf build/final_attempt

          # west build をシンプルな形で実行
          west build -s zmk/app -b seeeduino_xiao_ble -d build/final_attempt
          
          echo "=== Convert and Finalize ==="

          BIN_PATH="build/final_attempt/zephyr/zephyr.elf"
          if [ -f "$BIN_PATH" ]; then
            echo "SUCCESS: Build completed! Converting to UF2..."
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "build/final_attempt/zephyr.uf2"
          else
            echo "FATAL: Build failed. Check logs carefully."
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: seeeduino_xiao_ble-final-firmware
          path: build/final_attempt/zephyr.uf2
