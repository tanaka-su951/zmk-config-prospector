# ZMKファームウェア ビルドワークフロー (環境の不安定性を回避する最終版)

name: Build ZMK Firmware (The Final Test)

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    # ZMKビルド用Dockerコンテナを使用
    runs-on: ubuntu-latest
    container: zmkfirmware/zmk-build-arm:stable
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. ユーザー設定リポジトリをチェックアウト
      # submodules: false にすることで、既存のzmkサブモジュールによる混乱を防ぐ
      - name: Checkout user configuration (This repo)
        uses: actions/checkout@v4
        with:
          submodules: false
          
      # 2. ZMKワークスペースの完全なセットアップとビルド
      - name: Setup ZMK Workspace and Build
        shell: bash
        run: |
          echo "Setting up ZMK workspace..."
          
          # A. ZMKの公式 west.yml をダウンロード (wgetが動かないためcurlを使用)
          # ZMKの標準ワークスペース設定を強制的にルートに配置
          curl -sS https://raw.githubusercontent.com/zmkfirmware/zmk/main/app/west.yml -o west.yml
          
          # B. west init/update を実行し、ZephyrとZMK本体をクローン
          # この時点で、ZMK本体は zmk/ フォルダにクローンされます
          west init -l .
          west update --rebase
          
          # C. 診断: zmk/app ディレクトリの存在を最終確認
          echo "Verifying zmk/app directory:"
          ls -al zmk/app
          
          # D. ZMKの標準的な設定方法に対応するため、ユーザー設定ファイルを config フォルダに移動
          echo "Moving user files to config/..."
          mkdir -p config
          
          # ユーザーリポジトリ内のファイルを config/ に移動
          # west.yml は ZMK公式のものを残すため移動しない
          mv *.dts* *.overlay* *.keymap* *.c *.h config/ 2>/dev/null || true
          
          # E. Build ZMK firmware
          echo "Starting west build..."
          # 絶対パスではなく、west init/updateで認識された標準の zmk/app パスを使用
          west build -s zmk/app -p \
             -b ${{ matrix.board }} \
             -- -DSHIELD=${{ matrix.shield }}
        
      # 3. Archive firmware
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.shield }}-${{ matrix.board }}
          # ビルド成果物はルートの 'build' フォルダに出力される
          path: build/zephyr/zephyr.uf2
