# ZMKビルドの最終安定版。パスの問題を無視してGitで依存関係を強制取得します。

name: Build ZMK Firmware

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    # ワークフロー全体でデフォルトの作業ディレクトリを設定
    defaults:
      run:
        working-directory: ${{ github.workspace }}
        
    # ホストOSでチェックアウトを処理
    runs-on: ubuntu-latest
    
    # Dockerコンテナを使用
    container: zmkfirmware/zmk-build-arm:stable
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. 💥 変更: リポジトリのチェックアウトのみ行う (サブモジュールなし)
      - name: Checkout user configuration (no submodules)
        uses: actions/checkout@v4
        
      # 2. 💥 統合: ZMK依存関係をルートに強制クローン＆ビルド
      - name: Force Clone ZMK, Initialize and Build Firmware
        run: |
          # 認証情報を使用してZMK本体とZephyrを強制クローン (west.ymlの内容に基づく)
          echo "Force cloning ZMK and dependencies..."
          git clone --depth 1 https://github.com/zmkfirmware/zmk.git
          git clone --depth 1 https://github.com/zephyrproject-rtos/zephyr.git
          
          # 💥 修正: ZEPHYR_BASE を手動でクローンしたパスに強制設定
          export ZEPHYR_BASE=$PWD/zephyr
          
          # west環境を初期化し、残りのモジュールを更新
          # west init は実行済みだが、念のため再実行
          west init -l .
          west update
          
          # ビルドを実行: ZMK/appのソースコードをビルド
          # 全てがルートにあるため、このパスは正しい
          west build -s zmk/app -p -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }}
        
      # 3. ビルド成果物（ファームウェアファイル）をアーカイブ
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble
          path: build/zephyr/zephyr.uf2
