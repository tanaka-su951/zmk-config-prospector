name: Build Prospector Firmware (Final Solution - YAML Fix)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMK ツールチェーンがプリインストールされた安定の Docker Hub イメージを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      # 1. クリーンアップとチェックアウト (変更なし)
      - name: Free Disk Space (Custom)
        run: |
          rm -rf /usr/local/lib/android /usr/share/dotnet
          apt clean
          rm -rf /var/lib/apt/lists/*
        shell: bash

      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config

      - name: Checkout ZMK Repository
        uses: actions/checkout@v4
        with:
          repository: zmkfirmware/zmk
          ref: main 
          path: zmk

      # 2. west 初期化と依存関係の解決 (west.yml 修正)
      - name: Initialize West and Update Modules (Fix west.yml)
        run: |
          CONFIG_DIR="config"

          echo "=== 1. Setup west workspace and west.yml ==="
          
          # ★★★ 修正: manifest: キーをルートに追加し、構文を修正 ★★★
          cat << EOF > $CONFIG_DIR/west.yml
          manifest:
            remotes:
              - name: zmkfirmware
                url-base: https://github.com/zmkfirmware
            projects:
              - name: zmk
                remote: zmkfirmware
                revision: main
                import: app/west.yml
            self:
              path: config
          EOF

          # west init を ZMK ワークスペースのルート (./) で実行
          west init -l $CONFIG_DIR
          west update
          
          # 環境変数を設定
          echo "ZMK_CONFIG=$PWD/$CONFIG_DIR" >> $GITHUB_ENV
          echo "ZEPHYR_BASE=$PWD/zephyr" >> $GITHUB_ENV
          
        shell: bash

      # 3. ビルド実行と環境の初期化
      - name: Perform ZMK Build (Final Build)
        run: |
          export ZMK_CONFIG="$ZMK_CONFIG" 
          export ZEPHYR_BASE="$ZEPHYR_BASE"

          ZEPHYR_ENV_SCRIPT="$ZEPHYR_BASE/zephyr-env.sh"
          
          if [ -f "$ZEPHYR_ENV_SCRIPT" ]; then
              echo "SUCCESS: Zephyr environment script found. Sourcing..."
              source "$ZEPHYR_ENV_SCRIPT"
          else
              echo "FATAL: zephyr-env.sh not found. west update failed to fetch Zephyr."
              exit 1
          fi

          # CMAKE_PREFIX_PATH を明示的に設定
          ZEPHYR_CMAKE_DIR="$ZEPHYR_BASE/share/zephyr-package/cmake"
          export CMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH:$ZEPHYR_CMAKE_DIR"
          export GNUARMEMB_TOOLCHAIN_PATH="/opt/toolchains/gnuarmemb"


          echo "=== Starting ZMK Build ==="
          
          rm -rf build/final_attempt

          # west build を実行
          west build -s zmk/app -b seeeduino_xiao_ble -d build/final_attempt -v
          
          echo "=== Convert and Finalize ==="

          BIN_PATH="build/final_attempt/zephyr/zephyr.elf"
          if [ -f "$BIN_PATH" ]; then
            echo "SUCCESS: Build completed! Converting to UF2..."
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "build/final_attempt/zephyr.uf2"
          else
            echo "FATAL: Build failed. Check logs carefully."
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: seeeduino_xiao_ble-final-firmware
          path: build/final_attempt/zephyr.uf2
