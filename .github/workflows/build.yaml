# Final Diagnostic: ZMKビルドの失敗原因（パス認識/依存関係取得）を特定します。

name: Build ZMK Firmware

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    # ワークフロー全体でデフォルトの作業ディレクトリを設定 (ルートを指定)
    defaults:
      run:
        working-directory: ${{ github.workspace }}
        
    runs-on: ubuntu-latest
    
    # Dockerコンテナを使用
    container: zmkfirmware/zmk-build-arm:stable
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. リポジトリとサブモジュールをホストOSでチェックアウト
      - name: Checkout user configuration and ZMK submodules
        uses: actions/checkout@v4
        with:
          submodules: true # ZMKとZephyrのGitリポジトリをクローン
          
      # 2. 💥 診断: Checkout直後のファイル構造を確認
      - name: Diagnostic Check: Files after Submodule Checkout
        run: |
          echo "Listing files in workspace after checkout (looking for 'zmk'):"
          ls -aR
          
      # 3. Initialize and Update ZMK Dependencies
      - name: Initialize and Update ZMK Dependencies
        run: |
          echo "Running west init -l ."
          west init -l .  # west.ymlを使用してワークスペースを初期化
          echo "Running west update --rebase"
          west update --rebase # 依存関係をフェッチ
          
      # 4. 💥 診断: west update直後のファイル構造を確認
      - name: Diagnostic Check: Files after West Update
        run: |
          echo "Listing files in workspace after west update (checking for zmk/app):"
          ls -aR
          
      # 5. Build ZMK firmware
      - name: Build ZMK firmware
        run: west build -s zmk/app -p -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }}
        
      # 6. Archive firmware
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble
          path: build/zephyr/zephyr.uf2
