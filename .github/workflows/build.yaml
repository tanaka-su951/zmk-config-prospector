name: Build Prospector Firmware (Final Source Fix)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMK ツールチェーンがプリインストールされた安定の Docker Hub イメージを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      # 1. クリーンアップとチェックアウト (変更なし)
      - name: Free Disk Space (Custom)
        run: |
          rm -rf /usr/local/lib/android /usr/share/dotnet
          apt clean
          rm -rf /var/lib/apt/lists/*
        shell: bash

      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config

      # 2. west 初期化とアップデート
      - name: Initialize West and Update Modules
        run: |
          CONFIG_DIR="config"

          cat << EOF > $CONFIG_DIR/west.yml
          manifest:
            # ... (中略: west.yml の定義は変更なし) ...
            self:
              path: config
          EOF

          west init -l $CONFIG_DIR
          west update
          
          # ZMK_CONFIG を環境変数として次ステップに渡す
          echo "ZMK_CONFIG=$PWD/$CONFIG_DIR" >> $GITHUB_ENV
          
        shell: bash

      # 3. ビルド実行と環境の初期化
      - name: Perform ZMK Build (Final Source Injection)
        run: |
          export ZMK_CONFIG="$ZMK_CONFIG" 
          
          # ★★★ 修正: Zephyr 環境を source で初期化し、cmake が利用できるようにする ★★★
          ZEPHYR_ENV_SCRIPT="$PWD/zephyr/zephyr-env.sh"
          
          if [ -f "$ZEPHYR_ENV_SCRIPT" ]; then
              # 環境変数をシェル全体に設定
              source "$ZEPHYR_ENV_SCRIPT"
          else
              echo "FATAL: zephyr/zephyr-env.sh not found. West update failed."
              exit 1
          fi

          echo "=== Starting ZMK Build ==="
          
          # Zephyr のパスを west に任せ、シンプルなコマンドを実行
          # これまでのパス注入で失敗したため、今回は west の自動検出に任せる
          west build -s zmk/app -b seeeduino_xiao_ble -d build/board_only_test
          
          echo "=== Convert and Finalize ==="

          BIN_PATH="build/board_only_test/zephyr/zephyr.elf"
          if [ -f "$BIN_PATH" ]; then
            echo "SUCCESS: Build completed!"
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "build/board_only_test/zephyr.uf2"
          else
            echo "FATAL: Build failed. Final failure is related to Zephyr's configuration within the board definition."
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: seeeduino_xiao_ble-final-firmware
          path: build/board_only_test/zephyr.uf2
