# ZMK Custom Config Build Workflow (Zephyr SDK 手動設定)

name: Build ZMK Firmware (Manual SDK Setup)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: Setup Build Environment (West, Python)
      run: pip install west

    - name: --- 🚨 ZMK コアの手動クローンと初期化 🚨 ---
      run: |
        # 過去の失敗で残されたwest設定とZMKフォルダを削除
        echo "--- DEBUG: Cleaning up old artifacts ---"
        rm -rf .west zmk
        
        # ZMKコアリポジトリを手動でクローン (クローン失敗回避のため)
        echo "--- DEBUG: Cloning ZMK Core ---"
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # west initとwest updateを実行し、Zephyrとカスタムモジュールを取得
        echo "--- Running west init and update ---"
        west init -l .
        west update
        
        if [ ! -d "zmk/app" ]; then
          echo "FATAL: ZMK/APP is still missing after forced clone and west update."
          exit 1
        fi
        
    - name: Setup Zephyr Toolchain
      # 🚨 ZMKビルドの鍵: Zephyr SDKのダウンロードと環境設定
      run: |
        # 必要なSDKのバージョンをインストール
        west zephyr-export
        
        # SDKファイルをダウンロード (v0.16.1を使用)
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.1/zephyr-sdk-0.16.1_linux-x86_64.tar.xz -O zephyr-sdk.tar.xz
        
        # 解凍
        mkdir zephyr-sdk
        tar -xf zephyr-sdk.tar.xz -C zephyr-sdk --strip-components=1
        
        # SDKの初期化と環境変数設定
        # この setup.sh コマンドが、CMakeエラーを解消します。
        zephyr-sdk/setup.sh -h

    - name: Install ZMK Python Dependencies
      # SDK設定後、残りのPython依存関係をインストール
      run: pip install -r zmk/requirements.txt || true

    - name: Build ZMK Firmware
      # west build を実行します。SDKが設定されたため、ビルドが可能になります。
      run: |
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
