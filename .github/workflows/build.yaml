name: Build Prospector Firmware (Final Manual Setup)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # ZMK ツールチェーンがプリインストールされた安定の Docker Hub イメージを使用
      image: zmkfirmware/zmk-build-arm:stable
      options: --user root

    steps:
      # 1. ディスク容量のクリーンアップ (変更なし)
      - name: Free Disk Space (Custom)
        run: |
          rm -rf /usr/local/lib/android /usr/share/dotnet
          apt clean
          rm -rf /var/lib/apt/lists/*
        shell: bash

      # 2. カスタム設定をワークスペースのルートにチェックアウト
      - name: Checkout Custom Config
        uses: actions/checkout@v4
        with:
          path: config

      # 3. ZMK 環境の手動セットアップ (west を使わない)
      - name: Manual ZMK/Zephyr Setup
        run: |
          echo "=== ZMK/Zephyr Manual Setup ==="

          # ZMK と Zephyr のソースコードを Git で直接取得
          # ZMK のメインブランチが参照する安定した Zephyr v3.5.0 を取得
          git clone --depth 1 -b main https://github.com/zmkfirmware/zmk zmk
          git clone --depth 1 -b v3.5.0 https://github.com/zephyrproject/zephyr zephyr

          # ZMK のサブモジュールを更新 (west update の代わり)
          cd zmk
          git submodule update --init --recursive
          cd ..
          
          # Zephyr 環境変数を設定 (ビルドに必須)
          echo "ZEPHYR_BASE=$PWD/zephyr" >> $GITHUB_ENV
          
          # ZMK CONFIG パスを設定
          echo "ZMK_CONFIG=$PWD/config" >> $GITHUB_ENV
          
        shell: bash

      # 4. ビルド実行と環境の初期化
      - name: Perform ZMK Build (Source and Build)
        run: |
          export ZMK_CONFIG="$ZMK_CONFIG" 
          export ZEPHYR_BASE="$ZEPHYR_BASE"

          # ★★★ 修正: zephyr-env.sh を source し、パスを環境変数にロード ★★★
          ZEPHYR_ENV_SCRIPT="$ZEPHYR_BASE/zephyr-env.sh"
          
          if [ -f "$ZEPHYR_ENV_SCRIPT" ]; then
              echo "SUCCESS: Zephyr environment script found. Sourcing..."
              source "$ZEPHYR_ENV_SCRIPT"
          else
              echo "FATAL: zephyr/zephyr-env.sh not found, despite manual clone."
              exit 1
          fi

          echo "=== Starting ZMK Build ==="
          
          # ビルドディレクトリをクリーンアップ
          rm -rf build/final_attempt

          # west build をシンプルな形で実行 (環境変数が設定されているため、パス注入は不要)
          west build -s zmk/app -b seeeduino_xiao_ble -d build/final_attempt
          
          echo "=== Convert and Finalize ==="

          BIN_PATH="build/final_attempt/zephyr/zephyr.elf"
          if [ -f "$BIN_PATH" ]; then
            echo "SUCCESS: Build completed! Converting to UF2..."
            python3 zmk/tools/uf2conv.py "$BIN_PATH" -c -o "build/final_attempt/zephyr.uf2"
          else
            echo "FATAL: Build failed. Check logs carefully."
            exit 1
          fi
        shell: bash

      - name: Archive production artifacts (Artifact Upload)
        uses: actions/upload-artifact@v4
        with:
          name: seeeduino_xiao_ble-final-firmware
          path: build/final_attempt/zephyr.uf2
