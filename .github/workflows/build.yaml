# ZMKビルドの最終安定版。パスの問題を無視してGitで依存関係を強制取得します。

name: Build ZMK Firmware

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    # ワークフロー全体でデフォルトの作業ディレクトリを設定
    defaults:
      run:
        working-directory: ${{ github.workspace }}
        
    # ホストOSでチェックアウトを処理
    runs-on: ubuntu-latest
    
    # Dockerコンテナを使用
    container: zmkfirmware/zmk-build-arm:stable
    
    strategy:
      matrix:
        board: [seeeduino_xiao_ble]
        shield: [prospector_scanner]
        
    steps:
      # 1. 💥 変更: ZMK本体の依存関係を強制クローン (Zephyrの場所も明確化)
      - name: Force Clone ZMK and Zephyr Dependencies
        env:
          ZEPHYR_BASE: ${{ github.workspace }}/zephyr
        run: |
          echo "Force cloning ZMK and dependencies..."
          git clone --depth 1 https://github.com/zmkfirmware/zmk.git
          git clone --depth 1 https://github.com/zephyrproject-rtos/zephyr.git
          
          # west環境を初期化し、残りのモジュールを更新
          west init -l .
          west update
          
      # 2. 💥 修正: ユーザー設定リポジトリをconfigフォルダにクローン
      - name: Checkout User Configuration into config/
        uses: actions/checkout@v4
        with:
          repository: tanaka-su951/zmk-config-prospector # 自身のconfigリポジトリを指定
          path: config # configフォルダにチェックアウト
          
      # 3. 💥 最終ビルド
      - name: Build ZMK firmware
        env:
          ZEPHYR_BASE: ${{ github.workspace }}/zephyr
        run: |
          echo "Starting west build..."
          # west init/updateで認識された標準の zmk/app パスを使用
          west build -s zmk/app -p \
             -b ${{ matrix.board }} \
             -- -DSHIELD=${{ matrix.shield }}
        
      # 4. ビルド成果物（ファームウェアファイル）をアーカイブ
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: prospector_scanner-seeeduino_xiao_ble
          path: build/zephyr/zephyr.uf2
