# ZMK Custom Config Build Workflow (最終最終版)
# ZMKコアリポジトリの手動クローンと環境変数の完全保証

name: Build ZMK Firmware (Ultimate Stable Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BOARD: seeeduino_xiao_ble
      ZEPHYR_SDK_VERSION: 0.15.2
      ZEPHYR_SDK_URL: https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_linux-x86_64.tar.gz
      KCONFIG_NONINTERACTIVE: 1

    steps:
    - name: 1. Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: 2. Install West Tool
      run: pip install west

    - name: 3. Initialize West Workspace, Clone ZMK Core, and Download Dependencies
      run: |
        echo "--- ZMKワークスペースを構築し、ZMKコアをクローン ---"
        
        # 1. WestをZMKのマニフェストで初期化
        west init -m https://github.com/zmkfirmware/zmk --mr main --mf app/west.yml .
        
        # 🚨 最終修正：ZMKコアリポジトリを 'zmk' ディレクトリに手動でクローン 🚨
        # これにより、west build が探す /zmk/app が存在することになります
        git clone https://github.com/zmkfirmware/zmk zmk
        
        # 2. 依存関係をダウンロード
        west update

    - name: 4. Install Python Dependencies and Set Environment
      run: |
        echo "--- Python依存関係をインストールと環境変数の永続化 ---"
        pip install -r zephyr/scripts/requirements.txt
        
        # 環境変数を永続的に設定
        echo "ZEPHYR_BASE=${{ github.workspace }}/zephyr" >> $GITHUB_ENV
        west zephyr-export | grep -E "^export " | sed -E 's/^export\s+//' >> $GITHUB_ENV


    - name: 5. Download and Setup Zephyr SDK
      run: |
        ZEPHYR_SDK_DIR="${{ runner.tool_cache }}/zephyr-sdk"
        echo "Installing Zephyr SDK v${{ env.ZEPHYR_SDK_VERSION }} to ${ZEPHYR_SDK_DIR}"
        mkdir -p ${ZEPHYR_SDK_DIR}
        curl -L -f -sS ${{ env.ZEPHYR_SDK_URL }} -o sdk.tar.gz
        tar -xzf sdk.tar.gz -C ${ZEPHYR_SDK_DIR} --strip-components=1

        echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
        echo "ZEPHYR_SDK_INSTALL_DIR=${ZEPHYR_SDK_DIR}" >> $GITHUB_ENV
        
    - name: 6. Run West Build (二重初期化とビルドを実行)
      run: |
        echo "--- Zephyr環境の最終セットアップとビルドの実行 ---"
        
        # 環境変数が設定された状態で source を実行し、シェルを初期化
        source zephyr/zephyr-env.sh
        
        # /zmk/app が存在する状態でビルドを実行
        west build -s zmk/app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DZMK_CONFIG=${{ github.workspace }}/config \
          -DEXTRA_CONF_FILE=${{ github.workspace }}/config/prospector_scanner.conf \
          -DEXTRA_KEMAP_OVERLAY=${{ github.workspace }}/config/prospector_scanner.keymap \
          -DEXTRA_OVERLAY_FILE=${{ github.workspace }}/config/prospector_scanner.overlay
          

    - name: 7. Archive Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-prospector_scanner
        path: build/zephyr/zmk.uf2
        retention-days: 7
