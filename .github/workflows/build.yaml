# ZMK Custom Config Build Workflow (完全統合版 - Zephyr環境スクリプト実行)

name: Build ZMK Firmware (Integrated Setup with Zephyr Source)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: --- 🚨 全てのセットアップとビルドの実行 🚨 ---
      run: |
        # 0. westをインストール
        pip install west
        
        # 1. ZMKコアを手動でクローン
        echo "--- DEBUG: Cloning ZMK Core ---"
        rm -rf .west zmk # クリーンアップ
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        # 2. west initとwest updateを実行し、Zephyrとカスタムモジュールを取得
        echo "--- Running west init and update ---"
        west init -l .
        west update
        
        # 3. Zephyr SDKのインストール
        echo "--- Setting up Zephyr SDK ---"
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.0/zephyr-sdk-0.16.0_linux-x86_64.tar.xz
        mkdir -p $HOME/zephyr-sdk
        tar xf zephyr-sdk-0.16.0_linux-x86_64.tar.xz -C $HOME/zephyr-sdk --strip-components=1
        
        # 4. Zephyr 環境変数の設定
        export ZEPHYR_TOOLCHAIN_VARIANT="zephyr"
        export ZEPHYR_SDK_INSTALL_DIR="$HOME/zephyr-sdk"
        
        # 🚨 最終修正: setup.shを実行し、環境の初期化を完了させる
        # zephyr-env.shではなく、SDKのセットアップスクリプトを呼び出します。
        echo "--- Sourcing Zephyr environment setup.sh ---"
        source $HOME/zephyr-sdk/setup.sh
        
        # 5. ZMK Python要件をインストール
        pip install -r zmk/requirements.txt || true
        
        # 6. ZMK Firmwareのビルドを実行
        echo "--- Starting west build ---"
        west build -s zmk/app -d build \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE

    # ビルド後の成果物アップロードステップ
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
