# ZMK Custom Config Build Workflow (Westローカルマニフェスト指定/堅牢版)
# WestローカルマニフェストとSDK手動設定による安定ビルド構成

name: Build ZMK Firmware (Robust West Local Manifest)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # 環境変数を一箇所に集約
    env:
      BOARD: seeeduino_xiao_ble
      SHIELD: prospector_scanner
      # 安定版SDKのバージョンとURLを定義
      ZEPHYR_SDK_VERSION: 0.15.2
      ZEPHYR_SDK_URL: https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_linux-x86_64.tar.gz
      # ビルド時の非対話モードを強制
      KCONFIG_NONINTERACTIVE: 1

    steps:
    - name: 1. Checkout ZMK Config (with submodules)
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: 2. Install West and ZMK Python Dependencies
      run: |
        pip install west
        # ZMKコアを一時的にクローンし、requirements.txtを使用
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk_tmp
        
        # 🚨 修正済み：requirements.txt の正しいパスを指定 🚨
        pip install -r zmk_tmp/scripts/requirements.txt
        
        rm -rf zmk_tmp # 一時ディレクトリは削除

    - name: 3. Initialize West Workspace with Local ZMK Core
      run: |
        # ZMKコアをクローン
        git clone https://github.com/zmkfirmware/zmk zmk
        # ローカルマニフェストとしてZMKコアディレクトリを指定
        west init -l zmk
        # 依存関係をダウンロード
        west update

    - name: 4. Download and Setup Zephyr SDK
      # Zephyr SDKをダウンロード、展開し、環境変数を設定
      run: |
        # 🚨 修正済み：runner.tool_cache をステップ内で定義 🚨
        ZEPHYR_SDK_DIR="${{ runner.tool_cache }}/zephyr-sdk"

        echo "Installing Zephyr SDK v${{ env.ZEPHYR_SDK_VERSION }} to ${ZEPHYR_SDK_DIR}"
        
        # ツールキャッシュディレクトリがなければ作成
        mkdir -p ${ZEPHYR_SDK_DIR}
        
        # ダウンロードとエラーチェックの堅牢化
        curl -L -f -sS ${{ env.ZEPHYR_SDK_URL }} -o sdk.tar.gz
        
        # ダウンロードしたアーカイブを展開
        tar -xzf sdk.tar.gz -C ${ZEPHYR_SDK_DIR} --strip-components=1

        # Zephyrビルドに必要な環境変数を設定
        echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
        # SDKインストールディレクトリを設定
        echo "ZEPHYR_SDK_INSTALL_DIR=${ZEPHYR_SDK_DIR}" >> $GITHUB_ENV
        
    - name: 5. Run West Build
      run: |
        # ツールチェーンと環境が設定された状態でビルドを実行
        # -s zmk/app: ZMKアプリケーションソースディレクトリ
        # -d build: ビルド出力ディレクトリ
        west build -s zmk/app -d build --sysbuild \
          -b ${{ env.BOARD }} \
          -- -DSHIELD=${{ env.SHIELD }} \
          -DZMK_CONFIG=${{ github.workspace }}

    - name: 6. Archive Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ env.BOARD }}-${{ env.SHIELD }}
        # UF2ファイルが生成されていることを前提
        path: build/zephyr/zmk.uf2
        retention-days: 7
