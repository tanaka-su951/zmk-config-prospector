name: ZMK Custom Config Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout ZMK Config (Skip Submodules)
        uses: actions/checkout@v4
        with:
          # サブモジュールの処理を完全にスキップ
          fetch-depth: 0
          submodules: false
          
      # 1. ビルドツールチェインのインストール
      - name: Install ZMK Build Dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip git wget ccache
          pip install west
          
          # Zephyr SDK (v0.17.4) をダウンロードし、インストール
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.17.4/zephyr-sdk-0.17.4_linux-x86_64.tar.xz
          tar xvf zephyr-sdk-0.17.4_linux-x86_64.tar.xz
          ./zephyr-sdk-0.17.4/setup.sh -t arm-zephyr-eabi
          
      # 【重要変更】2. westワークスペースの初期化とZMKリポジトリの強制取得
      - name: Initialize and Update ZMK Workspace (Force Download)
        run: |
          # ZMKのコアリポジトリを強制的にフェッチ（サブモジュールに依存しない）
          west init -l . 
          west update
          
          # ZMKのPython要件を追加でインストール
          pip install -r zmk/requirements.txt || true 

      # 3. Zephyr環境変数の設定
      - name: Source Zephyr Environment
        run: |
          echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
          echo "ZEPHYR_SDK_INSTALL_DIR=/home/runner/zephyr-sdk-0.17.4" >> $GITHUB_ENV
          
      # 4. ZMK ファームウェアのビルド
      - name: Build ZMK Firmware
        run: |
          # この時点で zmk/app が存在することを期待
          west build -s zmk/app -d build \
            -b seeeduino_xiao_ble \
            -- -DSHIELD=prospector_scanner \
            -DZMK_CONFIG=$GITHUB_WORKSPACE
            
      # 5. ビルド成果物のアップロード
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: seeeduino_xiao_ble-prospector_scanner
          path: build/zephyr/zmk.uf2
          if-no-files-found: error
          retention-days: 7
