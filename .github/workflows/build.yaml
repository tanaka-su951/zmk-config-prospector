# # ZMK Custom Config Build Workflow (すべてを単一のシェル実行に統合)

name: Build ZMK Firmware (Integrated Shell Final)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ZMK Config
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: --- 🚨 ビルド環境のセットアップと実行 (統合) 🚨 ---
      run: |
        echo "--- 0. westをインストール ---"
        pip install west
        
        echo "--- 1. ZMKコアをmainブランチでクローンし、west初期化 ---"
        rm -rf .west zmk # クリーンアップ
        git clone --depth 1 https://github.com/zmkfirmware/zmk zmk
        
        west init -l .
        west update
        
        echo "--- 2. Zephyr SDKのインストール ---"
        # SDK v0.16.0を使用
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.0/zephyr-sdk-0.16.0_linux-x86_64.tar.xz
        mkdir -p $HOME/zephyr-sdk
        tar xf zephyr-sdk-0.16.0_linux-x86_64.tar.xz -C $HOME/zephyr-sdk --strip-components=1
        
        echo "--- 3. ZMK Python要件をインストール ---"
        pip install -r zmk/requirements.txt || true

    - name: --- 🚨 ビルド実行 (SDK設定とビルドを統合) 🚨 ---
      # 🚨 SDKのsourceとwest buildを単一のrunステップに統合 🚨
      run: |
        # 究極の対話モード回避策を環境変数で設定
        export KCONFIG_NONINTERACTIVE=1
        
        # Zephyr 環境を**現在のシェル**で設定
        echo "--- Sourcing Zephyr environment setup.sh ---"
        source $HOME/zephyr-sdk/setup.sh
        
        # ZMK Firmwareのビルドを実行
        echo "--- Starting west build (Integrated Shell) ---"
        west build -s zmk/app -d build --sysbuild \
          -b seeeduino_xiao_ble \
          -- -DSHIELD=prospector_scanner \
          -DZMK_CONFIG=$GITHUB_WORKSPACE \
          -DCONFIG_BUILD_WITH_CMAKE=n

    # ビルド後の成果物アップロードステップ
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: build/zephyr/zmk.uf2
